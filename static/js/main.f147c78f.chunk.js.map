{"version":3,"sources":["image/logo.png","utilities/formatDate.js","components/AppBar/AppBar.js","components/Checkbox/Checkbox.js","components/SubTask/SubTask.js","components/Task/Task.js","components/Column/Column.js","components/FormTaskDetail/SubTask/SubTask.js","components/FormTaskDetail/FormTaskDetail.js","components/BoardContent/BoardContent.js","utilities/dragDrop.js","components/FormAddHashtag/FormAddHashtag.js","components/FormEditHashtag/FormEditHashtag.js","components/Hashtag/Hashtag.js","components/FilterColumn/FilterColumn.js","components/MainBoard/MainBoard.js","App.js","reportWebVitals.js","index.js"],"names":["FormatDateToAdd","dateTask","date","getDate","month","getMonth","getFullYear","AppBar","useSearchParams","setSearch","className","onClick","currentDate","Date","src","logo","alt","CheckboxContainer","styled","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props","checked","Checkbox","viewBox","points","SubTask","subtask","onCheckSubTask","isTaskCompleted","useState","status","checkSubTask","setCheckSubTask","useEffect","onChange","e","id","target","title","Task","task","hashtags","check","setCheck","subtasks","setSubTasks","isReLoadSubTask","setReLoadSubTask","fetchSubTasks","a","axios","get","BASE_URL","res","data","handleTaskChange","post","id_subtask","status_subtask","window","location","replace","to","length","map","index","describe","hashtag","name","Column","isShowAddNewTask","setIsShowAddNewTask","textAreaRef","useRef","valueTextArea","setValueTextArea","searchParam","column","onTaskDrop","AddNewTask","tasks","current","focus","handleAddNewTask","idHashtag","newTask","rows","placeholder","ref","value","event","class","columnDate","checkPastDay","groupName","onDrop","dropResult","getChildPayload","dragClass","dropClass","dropPlaceholder","animationDuration","showOnTop","dropPlaceholderAnimationDuration","setTaskInColumn","onUpdateSubTask","onDeleteSubTask","TitleSubTask","setTitleSubTask","disable","setDisable","Form","Control","size","disabled","onBlur","FormAddTaskDetail","idtask","useParams","setTask","setHashTags","startDate","setStartDate","startDueDate","setStartDueDate","optionHashTags","setOptionHashTags","optionSelectedHashTags","setOptionSelectedHashTags","isReLoadListSubTasks","setReLoadSubTasks","navigate","useNavigate","ChangeOptionToHashTags","options","option","push","cat","fetchTasks","defaultOptions","dataTask","dataHashTags","slice","key","forEach","dataSubTask","AcceptChangeTask","edit_task","document","getElementById","parentId","userId","put","ChangeSelectedHashTags","DeleteTask","confirm","delete","AddNewSubTaskInTask","newSubTask","id_delete_sub_task","id_edit_subtask","title_edit_subtask","editSubTask","defaultValue","dateFormat","selected","displayValue","selectedValues","onSelect","onRemove","axiosHeaders","BoardContent","columns","setColumns","ReLoadBoardContent","setReLoadBoardContent","fetchHashTags","valueDate","bonusCondition","dataColumn","moment","i","format","add","setHashtagChange","hashtagChange","headers","columnId","removedIndex","addedIndex","ChangeDateOfTask","payload","newColumns","currentColumn","find","arr","dragResult","Boolean","result","itemToAdd","splice","applyDrag","taskOrder","dateChange","changeDate","id_task","updateDate","setColumnInBoard","FormAddHashtag","onCreateHashtag","modalVisible","setName","isVisible","setIsVisible","onSubmit","preventDefault","required","FormEditHashtag","onEditHashtag","fetch","then","json","catch","error","Hashtag","deleteStatus","setDeleteStatus","setSearchParams","listHashtag","setChannel","response","sort","b","loadHashtag","tabIndex","findByHashtag","style","color","trigger","position","FilterColumn","Calendar","onClickDay","selectRange","minDetail","MainBoard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","element"],"mappings":"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","file":"static/js/main.f147c78f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.251adb89.png\";","export function FormatDateToAdd(dateTask) {\r\n    let date = dateTask.getDate();\r\n    let month = dateTask.getMonth()+1;\r\n    let year = dateTask.getFullYear();\r\n    if(date<10) date = '0'+date;\r\n    if(month<10) month = '0'+month;\r\n    return date+'-'+month+'-'+year;\r\n}","import React from 'react';\r\nimport './AppBar.scss';\r\nimport logo from '../../image/logo.png';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { FormatDateToAdd } from '../../utilities/formatDate';\r\n\r\n\r\nconst AppBar = () => {\r\n    const [search, setSearch] = useSearchParams();\r\n    const onClick = () => {\r\n        let currentDate = new Date();\r\n        setSearch({date:FormatDateToAdd(currentDate)});\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"navbar-app\">\r\n                <button className='logo-btn' onClick={() => onClick()}>\r\n                    <img className='app-logo' src={logo} alt='App-logo'/>\r\n                </button>    \r\n                <div className=\"app-title\">\r\n                    <strong>Sunsama</strong>\r\n                </div> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AppBar;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: white;\r\n  stroke-width: 2px;\r\n`\r\n\r\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0) !important;\r\n  clippath: inset(50%) !important;\r\n  height: 1px !important;\r\n  margin: -1px !important;\r\n  overflow: hidden !important;\r\n  padding: 0 !important;\r\n  position: absolute !important;\r\n  white-space: nowrap !important;\r\n  width: 1px !important;\r\n`\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block !important;\r\n  width: 15px !important;\r\n  height: 15px !important;\r\n  background: ${props => (props.checked ? '#00FB2D' : '#A9FEB8')} !important;\r\n  border-radius: 12px !important;\r\n  transition: all 150ms !important;\r\n  opacity: ${props => (props.checked ? 1 : 0.2)};\r\n\r\n  ${HiddenCheckbox}:focus + & {\r\n    box-shadow: 0 0 0 3px pink !important;\r\n  }\r\n\r\n  ${HiddenCheckbox}:hover + & {\r\n    opacity: 1;\r\n  }\r\n\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\r\n  }\r\n`\r\n\r\nconst Checkbox = ({ className, checked, ...props }) => (\r\n  <CheckboxContainer className={className}>\r\n    <HiddenCheckbox checked={checked} {...props} />\r\n    <StyledCheckbox checked={checked}>\r\n      <Icon viewBox=\"-1 2 26 30\">\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </Icon>\r\n    </StyledCheckbox>\r\n  </CheckboxContainer>\r\n)\r\n\r\nexport default Checkbox\r\n","import React, {useEffect, useState} from \"react\";\r\nimport './SubTask.scss';\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nconst SubTask = (props)=>{\r\n    const { subtask , onCheckSubTask , isTaskCompleted } = props;\r\n    const [checkSubTask, setCheckSubTask] = useState(subtask.status);\r\n    useEffect(()=>{\r\n        if(isTaskCompleted == true) setCheckSubTask(true);\r\n    },[isTaskCompleted]);\r\n    const handleSubTaskChange = (e) => {\r\n        onCheckSubTask(subtask.id,e.target.checked);\r\n        setCheckSubTask(e.target.checked);\r\n    };\r\n    return (\r\n        <div className=\"subtask-item\">\r\n            {/* <input\r\n                type=\"checkbox\"\r\n                className=\"check-subtask checker\"\r\n                checked={checkSubTask}\r\n                onChange={handleSubTaskChange}\r\n            /> */}\r\n            <label>\r\n            <Checkbox \r\n                checked={checkSubTask}\r\n                onChange={handleSubTaskChange}\r\n            />\r\n            </label>\r\n            {subtask.title}\r\n        </div>\r\n    )\r\n}\r\nexport default SubTask","import React, {useState,useEffect} from \"react\";\r\nimport './Task.scss';\r\nimport SubTask from \"../SubTask/SubTask\";\r\nimport {AiOutlineInfoCircle} from \"react-icons/all\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../index\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nconst Task = (props)=>{\r\n    const { task } = props;\r\n    //const subtasks = task.subtasks;\r\n    const hashtags = task.hashtags;\r\n    const [check, setCheck] = useState(task.status);\r\n    const [subtasks,setSubTasks] = useState([]);\r\n    const [isReLoadSubTask , setReLoadSubTask] = useState(false);\r\n    useEffect(() => {\r\n        const fetchSubTasks= async () => {\r\n                let res = await axios.get(`${BASE_URL}/tasks/`+task.id+'/subtasks');\r\n                setSubTasks(res.data);\r\n                setReLoadSubTask(false);\r\n        }\r\n        fetchSubTasks();\r\n    },[isReLoadSubTask]);\r\n    const handleTaskChange = async (e) => {\r\n        setCheck(e.target.checked);\r\n        await axios.post(`${BASE_URL}/tasks/`+task.id+'/complete');\r\n        if(e.target.checked == true) setReLoadSubTask(true);\r\n    };\r\n    const onCheckSubTask = async (id_subtask,status_subtask) => {\r\n        try {\r\n            if(status_subtask == false) setCheck(false);\r\n            await axios.post(`${BASE_URL}/tasks/`+id_subtask+'/complete');\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    function OpenFormTaskDetail() {\r\n        window.location.replace(`/#/task-detail/`+task.id);\r\n    }\r\n    return (\r\n            <div className=\"task-item\">\r\n                <div className=\"header-task\">\r\n                    {/* <input\r\n                        type=\"checkbox\"\r\n                        className=\"checker\"\r\n                        checked= {check}\r\n                        onChange={handleTaskChange}\r\n                    /> */}\r\n                    <label>\r\n                    <Checkbox \r\n                        className='checker'\r\n                        checked= {check}\r\n                        onChange={handleTaskChange}\r\n                    />\r\n                    </label>\r\n                    <div className=\"title-task\" onClick={OpenFormTaskDetail}>{task.title}</div>\r\n                    <Link to={`/task-detail/`+task.id}>\r\n                        <AiOutlineInfoCircle className=\"info-task\"/>\r\n                    </Link>\r\n                </div>\r\n                {subtasks && subtasks.length > 0 && subtasks.map((subtask  ,index) =>{\r\n                    return (\r\n                        <SubTask\r\n                            key = {subtask.id}\r\n                            subtask = {subtask}\r\n                            onCheckSubTask = {onCheckSubTask}\r\n                            isTaskCompleted = {check}\r\n                        />\r\n                    )\r\n                })}\r\n                <div className=\"decription-task\">\r\n                    {task.describe}\r\n                </div>\r\n                <div className=\"hashtag-of-task\">\r\n                    {hashtags && hashtags.length > 0 && hashtags.map((hashtag ,index) =>{\r\n                        return (\r\n                            <div className=\"task-hashtag-label\">\r\n                                #{hashtag.name}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Task","import React, { useEffect, useRef, useState } from \"react\";\r\nimport './Column.scss';\r\nimport Task from \"../Task/Task\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport { FormatDateToAdd } from \"../../utilities/formatDate\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nconst Column = (props) => {\r\n    const [isShowAddNewTask, setIsShowAddNewTask] = useState(false);\r\n    const textAreaRef = useRef(null);\r\n    const [valueTextArea, setValueTextArea] = useState(\"\");\r\n    const [searchParam, setSearchParams] = useSearchParams();\r\n    const { column, onTaskDrop, AddNewTask } = props;\r\n    const tasks = column.tasks;\r\n    useEffect(() => {\r\n        if (isShowAddNewTask === true) {\r\n            textAreaRef.current.focus();\r\n        }\r\n    }, [isShowAddNewTask])\r\n\r\n    const checkPastDay = () => {\r\n        const columnDate = new Date(column.id);\r\n        const currentDate = new Date();\r\n        return columnDate.getDate() >= currentDate.getDate();\r\n    }\r\n\r\n    function handleAddNewTask() {\r\n        if (valueTextArea != null) {\r\n            const dateTask = new Date(column.id);\r\n            let idHashtag = searchParam.get('hashtag');\r\n            let newTask = '';\r\n            if (idHashtag != 'null' && idHashtag != 0) {\r\n                newTask = {\r\n                    \"title\": valueTextArea,\r\n                    \"describe\": \"\",\r\n                    \"date\": FormatDateToAdd(dateTask) + \" 00:00:00\",\r\n                    \"dueDate\": FormatDateToAdd(dateTask) + \" 00:00:00\",\r\n                    \"hashtagsId\": [idHashtag],\r\n                    \"isStatus\": false,\r\n                    \"parentId\": 0,\r\n                    \"userId\": 1\r\n                };\r\n            }\r\n            else {\r\n                newTask = {\r\n                    \"title\": valueTextArea,\r\n                    \"describe\": \"\",\r\n                    \"date\": FormatDateToAdd(dateTask) + \" 00:00:00\",\r\n                    \"dueDate\": FormatDateToAdd(dateTask) + \" 00:00:00\",\r\n                    \"hashtagsId\": [],\r\n                    \"isStatus\": false,\r\n                    \"parentId\": 0,\r\n                    \"userId\": 1\r\n                };\r\n            }\r\n            AddNewTask(newTask);\r\n            setValueTextArea('');\r\n            setIsShowAddNewTask(false);\r\n        }\r\n    }\r\n    const setTaskInColumn = (tasks) => {\r\n        return (tasks && tasks.length > 0 && tasks.map((task, index) => {\r\n            return (\r\n                <Draggable key={task.id}>\r\n                    <Task\r\n                        key={task.id}\r\n                        task={task}\r\n                    />\r\n                </Draggable>\r\n            )\r\n        }))\r\n    }\r\n    function ShowAddNewTask(e) {\r\n        if (isShowAddNewTask === true) setIsShowAddNewTask(false);\r\n        else setIsShowAddNewTask(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"column\">\r\n                <header className=\"column-drag-handle\">\r\n                    {column.title}\r\n                </header>\r\n                <div className=\"date_column\">  {column.describe}  </div>\r\n                {isShowAddNewTask === true &&\r\n                    <div className='add-new-task'>\r\n                        <div className=\"input-form\">\r\n                            <textarea\r\n                                rows=\"1\"\r\n                                className='form-control'\r\n                                placeholder=\"Task's title...\"\r\n                                ref={textAreaRef}\r\n                                value={valueTextArea}\r\n                                onChange={(event) => setValueTextArea(event.target.value)}\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className='group-btn'>\r\n                            <button className='btn btn-success' onClick={handleAddNewTask}>\r\n                                Add Task\r\n                            </button>\r\n                            {/* <i className='fa fa-times icon' onClick={ShowAddNewTask}></i> */}\r\n                            <div class=\"close-container\" onClick={handleAddNewTask}>\r\n                                <div class=\"leftright\"></div>\r\n                                <div class=\"rightleft\"></div>\r\n                                <label class=\"close\">close</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {isShowAddNewTask === false && checkPastDay() &&\r\n                    <footer>\r\n                        <div className=\"footer-action\" onClick={ShowAddNewTask}>\r\n                            <i className='fa fa-plus icon' >\r\n                            </i> Add another task\r\n                        </div>\r\n                    </footer>\r\n                }\r\n                <div className=\"list-task\">\r\n                    <Container\r\n                        {...column.props}\r\n                        groupName=\"col\"\r\n                        onDrop={(dropResult) => onTaskDrop(dropResult, column.id)}\r\n                        getChildPayload={index => tasks[index]}\r\n                        dragClass=\"card-ghost\"\r\n                        dropClass=\"card-ghost-drop\"\r\n                        dropPlaceholder={{\r\n                            animationDuration: 200,\r\n                            showOnTop: true,\r\n                            className: 'task-drop-preview'\r\n                        }}\r\n                        dropPlaceholderAnimationDuration={200}\r\n                    >\r\n                        {setTaskInColumn(tasks)}\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Column;","import React, {useEffect, useState} from \"react\";\r\nimport './SubTask.scss';\r\nimport {Form} from \"react-bootstrap\";\r\nimport {AiOutlineDelete, AiOutlineEdit, FiPlay} from \"react-icons/all\";\r\nconst SubTask = (props) =>{\r\n    const { subtask ,onUpdateSubTask,onDeleteSubTask} = props;\r\n    const [TitleSubTask, setTitleSubTask] = useState(\"\");\r\n    const [disable, setDisable] = useState(true);\r\n    useEffect(()=>{\r\n        if(subtask && subtask.title){\r\n            setTitleSubTask(subtask.title);\r\n        }\r\n    },[subtask]);\r\n    function onChangeTitleSubTask(e){\r\n        setTitleSubTask(e.target.value);\r\n    }\r\n    const EnableEditSubTask = () => {\r\n        setDisable(false);\r\n    }\r\n    function onUpdateTitleSubTask(event){\r\n        if(event.target.value !== subtask.name){\r\n            onUpdateSubTask(subtask.id,event.target.value);\r\n        }\r\n        setDisable(true);\r\n    }\r\n    function DeleteSubTask(event) {\r\n        onDeleteSubTask(subtask.id);\r\n    }\r\n    return (\r\n        <div className=\"subtask-item\">\r\n            <FiPlay className=\"subtask-icon\"/>\r\n            <Form.Control\r\n            size={\"sm\"}\r\n            type=\"text\"\r\n            value={TitleSubTask}\r\n            className=\"subtask\"\r\n            disabled={disable}\r\n            onChange={onChangeTitleSubTask}\r\n            onBlur={onUpdateTitleSubTask}\r\n        />\r\n            <div className=\"edit-button\">\r\n                <AiOutlineEdit\r\n                    className=\"edit-title-button\"\r\n                    onClick={EnableEditSubTask}\r\n                />\r\n                <AiOutlineDelete\r\n                    className=\"delete-button\"\r\n                    onClick={DeleteSubTask}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SubTask","import React,{useEffect,useState} from \"react\";\r\nimport './FormTaskDetail.scss'\r\nimport {Link, useParams, useNavigate} from \"react-router-dom\";\r\nimport SubTask from \"./SubTask/SubTask\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {IoIosAddCircleOutline, RiDeleteBack2Line} from \"react-icons/all\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../index\";\r\nimport {Multiselect} from \"multiselect-react-dropdown\";\r\nimport {FormatDateToAdd} from \"../../utilities/formatDate\";\r\nconst FormAddTaskDetail = () => {\r\n    const { idtask } = useParams();\r\n    const [task,setTask] = useState({});\r\n    const [hashtags, setHashTags] = useState([]);\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [startDueDate, setStartDueDate] = useState(new Date());\r\n    const [subtasks, setSubTasks] = useState([]);\r\n    const [optionHashTags , setOptionHashTags] = useState([]);\r\n    const [optionSelectedHashTags , setOptionSelectedHashTags] = useState([]);\r\n    const [isReLoadListSubTasks,setReLoadSubTasks] = useState(false);\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect( () => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                let options = [];\r\n                let defaultOptions = [];\r\n                let dataTask = await axios.get(`${BASE_URL}/tasks/` + idtask + '/');\r\n                let dataHashTags = await axios.get(`${BASE_URL}/hashtags/`);\r\n                setTask(dataTask.data);\r\n                setHashTags(dataHashTags.data);\r\n                setStartDate(new Date(dataTask.data.date.slice(0, 10)));\r\n                setStartDueDate(new Date(dataTask.data.date.slice(0, 10)));\r\n                dataTask.data.hashtags.map((hashtag)=>{\r\n                    defaultOptions.push({\r\n                        cat: hashtag.id,\r\n                        key: hashtag.name\r\n                    });\r\n                });\r\n                setOptionSelectedHashTags(defaultOptions);\r\n                dataHashTags.data.forEach((hashtag)=>{\r\n                    options.push({\r\n                        cat: hashtag.id,\r\n                        key: hashtag.name\r\n                    });\r\n                });\r\n                setOptionHashTags(options);\r\n            } catch (e) {\r\n            }\r\n        }\r\n            fetchTasks();\r\n    },[]);\r\n    useEffect(async ()=>{\r\n        let dataSubTask = await axios.get(`${BASE_URL}/tasks/` + idtask + '/subtasks');\r\n        setSubTasks(dataSubTask.data);\r\n        setReLoadSubTasks(false);\r\n    },[isReLoadListSubTasks])\r\n    function ChangeOptionToHashTags(options){\r\n        let hashtags = [];\r\n        options.map((option) =>{\r\n            hashtags.push(option.cat);\r\n        });\r\n        return hashtags;\r\n    }\r\n    const AcceptChangeTask = async () =>{\r\n        const edit_task = {\r\n            \"title\": document.getElementById('name-hashtag').value,\r\n            \"describe\": document.getElementById('valueDescribeTask').value,\r\n            \"date\": FormatDateToAdd(startDate)+\" 00:00:00\",\r\n            \"dueDate\": FormatDateToAdd(startDueDate)+\" 00:00:00\",\r\n            \"hashtagsId\": ChangeOptionToHashTags(optionSelectedHashTags),\r\n            \"isStatus\": task.status,\r\n            \"parentId\": task.parentId,\r\n            \"userId\": task.userId\r\n        }\r\n        await axios.put(`${BASE_URL}/tasks/` + idtask + '/',edit_task);\r\n        navigate(-1);\r\n    }\r\n    function ChangeSelectedHashTags(data){\r\n        setOptionSelectedHashTags(data)\r\n    }\r\n    const DeleteTask = async () => {\r\n        if(window.confirm(\"Do you want to delete this task ?\") == true){\r\n            await axios.delete(`${BASE_URL}/tasks/` + idtask + '/');\r\n            navigate(-1);\r\n        }\r\n    }\r\n    const AddNewSubTaskInTask = async () => {\r\n        if(document.getElementById('title-subtask').value != ''){\r\n            const newSubTask = {\r\n                \"title\": document.getElementById('title-subtask').value,\r\n                \"describe\":''\r\n            }\r\n            await axios.post(`${BASE_URL}/tasks/` + idtask + '/subtasks',newSubTask);\r\n            setReLoadSubTasks(true);\r\n            document.getElementById('title-subtask').value = null;\r\n        }\r\n    }\r\n    const onDeleteSubTask = async (id_delete_sub_task) => {\r\n        await axios.delete(`${BASE_URL}/tasks/`+id_delete_sub_task);\r\n        setReLoadSubTasks(true);\r\n    }\r\n    const onUpdateSubTask = async (id_edit_subtask,title_edit_subtask) => {\r\n        const editSubTask = {\r\n            \"title\": title_edit_subtask,\r\n            \"describe\": ''\r\n        }\r\n        await axios.put(`${BASE_URL}/tasks/`+id_edit_subtask,editSubTask);\r\n        setReLoadSubTasks(true);\r\n    }\r\n    return (\r\n        <div className=\"edit-container\">\r\n        <div className=\"body-form\" >\r\n            <h2 className=\"Topic-form\"> Task Detail</h2>\r\n            <div  className=\"input-title\">\r\n                <label>Title:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name-hashtag\"\r\n                    defaultValue = {task.title}/>\r\n            </div>\r\n            <div className=\"input-description\">\r\n                <label className=\"name-description\">Description: </label>\r\n                <textarea\r\n                    name=\"textValue\"\r\n                    id=\"valueDescribeTask\"\r\n                    className=\"description-task\"\r\n                    defaultValue = {task.describe}/>\r\n            </div>\r\n            <div className=\"date-task\">\r\n                <label className=\"name-date\">Date of Task</label>\r\n                <DatePicker className=\"date\"\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}/>\r\n            </div>\r\n            <div className=\"due-date\">\r\n                <label className=\"name-duedate\"> Due Day </label>\r\n                <DatePicker\r\n                            className=\"duedate\"\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                            selected={startDueDate}\r\n                            onChange={(date) => setStartDueDate(date)} />\r\n            </div>\r\n            <div className=\"board-subtask\">\r\n                <div><label>SubTask: </label></div>\r\n                <div className=\"detail-list-hashtag\">\r\n                    {subtasks && subtasks.length > 0 && subtasks.map((subtask  ,index) =>{\r\n                        return (\r\n                            <SubTask\r\n                                key = {subtask.id}\r\n                                subtask = {subtask}\r\n                                onDeleteSubTask = {onDeleteSubTask}\r\n                                onUpdateSubTask = {onUpdateSubTask}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <div className='add-new-subtask'>\r\n                        <div  className=\"name-subtask\">\r\n                            <label>Title: </label><input className=\"subtask-title-input\" type=\"text\" name=\"title\" id=\"title-subtask\"/>\r\n                        </div>\r\n                        <button className=\"add-button\" onClick={AddNewSubTaskInTask}> Add </button>\r\n                    </div>\r\n                </div>\r\n            <div className=\"detail-list-hashtag\">\r\n                <label>Channels: </label>\r\n                <Multiselect\r\n                    displayValue=\"key\"\r\n                    options={optionHashTags}\r\n                    selectedValues={optionSelectedHashTags}\r\n                    onSelect={ChangeSelectedHashTags}\r\n                    onRemove={ChangeSelectedHashTags}\r\n                />\r\n            </div>\r\n            </div>\r\n            <div className=\"buttons\" >\r\n                <button className=\"save-button\" onClick={AcceptChangeTask}> Save </button>\r\n                <button className=\"cancel-button\" onClick={() => navigate(-1)}>Cancel\r\n                    {/* <Link to=\"/dashboard\" className=\"return-dashboard\"></Link> */}\r\n                </button>\r\n                <button className=\"delete-button\" onClick={DeleteTask}> Delete </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FormAddTaskDetail","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    useSearchParams,\r\n  } from \"react-router-dom\";\r\nimport './BoardContent.scss'\r\nimport Column from \"../Column/Column\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport {applyDrag} from \"../../utilities/dragDrop\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../index\";\r\nimport moment from \"moment\";\r\nimport FormTaskDetail from \"../FormTaskDetail/FormTaskDetail\";\r\nimport task from \"../Task/Task\";\r\nconst axiosHeaders =  {\r\n    'Content-Type': 'application/json',\r\n    'Accept':'*/*'\r\n    }\r\nconst BoardContent = (props)  =>{\r\n    const [board, setBoard] = useState({});\r\n    const [columns, setColumns] = useState([]);\r\n    const [searchParam, setSearchParams] = useSearchParams();\r\n    const [ReLoadBoardContent, setReLoadBoardContent] = useState(false);\r\n    useEffect(()=>{\r\n        setReLoadBoardContent(true);\r\n    },[searchParam])\r\n    useEffect(() => {\r\n        const fetchHashTags = async () => {\r\n            const idHashtag=searchParam.get('hashtag');\r\n            const valueDate=searchParam.get('date');\r\n            var bonusCondition = '';\r\n            if(idHashtag && idHashtag!= 0 && idHashtag != 'null') {bonusCondition = '?hashtagId='+idHashtag;}\r\n            let dataColumn = [];\r\n            const date = moment(valueDate,'DD-MM-YYYY');\r\n            for (let i=0;i<4;i++)\r\n            {\r\n                let res = await axios.get(`${BASE_URL}/tasks/date/`+date.format(\"YYYY-MM-DD\")+bonusCondition);\r\n                dataColumn.push({\r\n                    id:date.format(\"YYYY-MM-DD\"),\r\n                    title: date.format(\"dddd\"),\r\n                    describe: date.format(\"MMMM Do\"),\r\n                    tasks:res.data\r\n                });\r\n                date.add(1, 'day');\r\n            }\r\n            setColumns(dataColumn);\r\n            setReLoadBoardContent(false);\r\n            props.setHashtagChange(false);\r\n        }\r\n        fetchHashTags();\r\n    },[ReLoadBoardContent, props.hashtagChange]);\r\n    const AddNewTask = async (newTask) => {\r\n        await axios.post(`${BASE_URL}/tasks/`,newTask,{headers:axiosHeaders});\r\n        setReLoadBoardContent(true);\r\n    }\r\n    const onTaskDrop = (dropResult,columnId) => {\r\n        if(dropResult.removedIndex !== null || dropResult.addedIndex !== null )\r\n        {\r\n            ChangeDateOfTask(dropResult.payload,columnId);\r\n            let newColumns = [...columns];\r\n            let currentColumn = newColumns.find(column => column.id === columnId);\r\n            currentColumn.tasks = applyDrag(currentColumn.tasks,dropResult);\r\n            currentColumn.taskOrder = currentColumn.tasks.map(task =>task.id);\r\n            setColumns(newColumns)\r\n        }\r\n    }\r\n    const ChangeDateOfTask = (task, dateChange) => {\r\n        const changeDate = async (id_task,dateChange) => {\r\n            const updateDate = {\r\n                \"newDate\": dateChange\r\n            }\r\n            await axios.put(`${BASE_URL}/tasks/`+id_task+`/change_date/`,updateDate);\r\n        }\r\n        if(task.date.slice(0,10) != dateChange) changeDate(task.id,dateChange);\r\n    }\r\n    const setColumnInBoard = (columns) => {\r\n        return ( columns && columns.length > 0 && columns.map((column  ,index) =>{\r\n            return (\r\n                    <Column\r\n                        key = {column.id}\r\n                        column = {column}\r\n                        onTaskDrop = {onTaskDrop}\r\n                        AddNewTask = {AddNewTask}\r\n                    />\r\n            )\r\n        }))\r\n    }\r\n    return (\r\n            <div className=\"board-columns\">\r\n                {setColumnInBoard(columns)}\r\n            </div>\r\n    )\r\n}\r\nexport default BoardContent","import React, { useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../index\";\r\n\r\nexport const applyDrag = (arr, dragResult) => {\r\n    const { removedIndex, addedIndex, payload } = dragResult;\r\n    if (Boolean(removedIndex) && Boolean(addedIndex)) return arr;\r\n    const result = [...arr];\r\n\r\n    let itemToAdd = payload;\r\n\r\n    if (removedIndex !== null) {\r\n        itemToAdd = result.splice(removedIndex, 1)[0];\r\n    }\r\n\r\n    if (addedIndex !== null) {\r\n        result.splice(addedIndex, 0, itemToAdd);\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const generateItems = (count, creator) => {\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n        result.push(creator(i));\r\n    }\r\n    return result;\r\n};","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport './FormAddHashtag.scss';\r\nconst FormAddHashtag = (props) => {\r\n  const { onCreateHashtag,modalVisible} = props;\r\n  const [name, setName] = useState(\"\");\r\n  const [isVisible, setIsVisible] = useState(modalVisible);\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newHashtag = {\r\n      name,\r\n    };\r\n    onCreateHashtag(newHashtag);\r\n    setIsVisible(false);\r\n  };\r\n  const handleClick = event => {\r\n    setIsVisible(current => !current);\r\n  };\r\n  // eslint-disable-next-line no-lone-blocks\r\n  {\r\n    if(isVisible){\r\n        return (\r\n            <Form  className=\"add-hashtag-form\" onSubmit={onSubmit}>\r\n              <FormGroup>\r\n                <Label>Channel</Label>\r\n                <Input\r\n                className=\"add-hashtag-input\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={onChange}\r\n                  name=\"name\"\r\n                  placeholder=\"Channel title...\"\r\n                  required\r\n                ></Input>\r\n              </FormGroup>\r\n              <div className=\"add-hashtag-group-btn\">\r\n                <Button type=\"submit\">Submit</Button>\r\n                <Button onClick={handleClick} className=\"btn btn-danger ml-2\">\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n    }\r\n    else {\r\n        return <></>\r\n    }\r\n  }\r\n  \r\n};\r\nexport default FormAddHashtag;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport './FormEditHashtag.scss';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../index\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nconst FormEditHashtag = (props) => {\r\n  const { onEditHashtag, modalVisible, id } = props;\r\n  const [name, setName] = useState(\"\");\r\n  const [isVisible, setIsVisible] = useState(modalVisible);\r\n  const getData = () => {\r\n    fetch(`${BASE_URL}/hashtags/${id}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const hashtag = res;\r\n        setName(hashtag.name);\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const onChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.preventDefault();\r\n    const newHashtag = {\r\n      id,\r\n      name,\r\n    };\r\n    onEditHashtag(newHashtag);\r\n    setIsVisible(false);\r\n  };\r\n  const handleClick = (event) => {\r\n    setIsVisible((current) => !current);\r\n  };\r\n  if (isVisible) {\r\n    return (\r\n      <Form className=\"edit-hashtag-form\" onSubmit={onSubmit}>\r\n        <FormGroup>\r\n          <Label>Channel title</Label>\r\n          <Input\r\n            className=\"edit-hashtag-input\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={onChange}\r\n            name=\"name\"\r\n            placeholder=\"\"\r\n            required\r\n          ></Input>\r\n        </FormGroup>\r\n        <div className=\"edit-hashtag-group-btn\">\r\n          <Button type=\"submit\">Edit</Button>\r\n          <Button\r\n            onClick={handleClick}\r\n            to=\"/dashboard\"\r\n            className=\"btn btn-danger ml-2\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\nexport default FormEditHashtag;\r\n","/* eslint-disable no-undef */\r\nimport React, { useState, useEffect, createRef } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./Hashtag.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { AiOutlineDelete, AiFillEdit } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { ListGroupItem, Button } from \"reactstrap\";\r\nimport FormAddHashtag from \"../FormAddHashtag/FormAddHashtag\";\r\nimport { BASE_URL } from \"../../index\";\r\nimport FormEditHashtag from \"../FormEditHashtag/FormEditHashtag\";\r\n\r\nconst Hashtag = (props) => {\r\n  const [deleteStatus, setDeleteStatus] = useState(true);\r\n  const [searchParam, setSearchParams] = useSearchParams();\r\n  const [listHashtag, setChannel] = useState([]);\r\n  const getData = () => {\r\n    fetch(BASE_URL + \"/hashtags\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const allHashtag = { id: 0, name: \"All\" };\r\n        setChannel([\r\n          allHashtag,\r\n          ...res.sort((a, b) => (a.name > b.name ? 1 : -1)),\r\n        ]);\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.data);\r\n      });\r\n  };\r\n  const onEditHashtag = (e) => {\r\n    axios\r\n      .put(`${BASE_URL}/hashtags/${e.id}`, e)\r\n      .then((response) => {\r\n        setDeleteStatus(!deleteStatus);\r\n        props.setHashtagChange(true);\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.data);\r\n      });\r\n  };\r\n  const deleteHashtag = (e) => {\r\n    axios.delete(BASE_URL + \"/hashtags/\" + e).then((response) => {\r\n      if (response.data != null) {\r\n        setDeleteStatus(!deleteStatus);\r\n        props.setHashtagChange(true);\r\n      }\r\n    });\r\n  };\r\n  const onCreateHashtag = (e) => {\r\n    axios\r\n      .post(BASE_URL + \"/hashtags/\", e)\r\n      .then((response) => {\r\n        setDeleteStatus(!deleteStatus);\r\n      })\r\n      .catch((error) => {\r\n        // alert(error.data);\r\n      });\r\n  };\r\n  const findByHashtag = (e) => {\r\n    const date= searchParam.get('date');\r\n    setSearchParams({ hashtag: e,\r\n      date:date });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, [deleteStatus]);\r\n  const loadHashtag = listHashtag.map((listHashtag) => {\r\n    return (\r\n      <ListGroupItem\r\n        tabIndex={0}\r\n        onClick={(e) => findByHashtag(listHashtag.id)}\r\n        className=\"d-flex sub-hash-tag\"\r\n        key={listHashtag.id}\r\n      >\r\n        <p style={{ color: 'salmon' }}># </p>\r\n        <p>{listHashtag.name}</p>\r\n        {listHashtag.id ? (\r\n          <div className=\"ml-auto active\">\r\n            <Popup\r\n              trigger={\r\n                <button className=\"popup_edit_btn\">\r\n                  <AiFillEdit />\r\n                </button>\r\n              }\r\n              position=\"top left\"\r\n            >\r\n              <div className=\"popup\">\r\n                <FormEditHashtag\r\n                  onEditHashtag={onEditHashtag}\r\n                  modalVisible={true}\r\n                  id={listHashtag.id}\r\n                />\r\n              </div>\r\n            </Popup>\r\n            <Button\r\n              className=\"popup_delete-btn\"\r\n              color=\"white\"\r\n              size=\"sm\"\r\n              onClick={() => deleteHashtag(listHashtag.id)}\r\n            >\r\n              <AiOutlineDelete />\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </ListGroupItem>\r\n    );\r\n  });\r\n  return (\r\n   \r\n      <div className=\"hashtags\">\r\n            <div className=\"hashtags-list\">\r\n            <div className=\"hashtag-listttt\">\r\n              <div className=\"hashtags-list-item\">\r\n                <ul>{loadHashtag}</ul>\r\n              </div>\r\n\r\n              \r\n              </div>\r\n              <Popup\r\n                trigger={<button className=\"add-popup-btn\"> + Add Channels</button>}\r\n                position=\"top left\"\r\n              >\r\n                <div className=\"popup\">\r\n                  <FormAddHashtag\r\n                    onCreateHashtag={onCreateHashtag}\r\n                    modalVisible={true}\r\n                  />\r\n                </div>\r\n              </Popup>\r\n            </div>\r\n          </div>\r\n\r\n    \r\n  );\r\n};\r\nexport default Hashtag;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport'./FilterColumn.scss';\r\nimport Hashtag from \"../Hashtag/Hashtag\";\r\nimport {FormatDateToAdd} from \"../../utilities/formatDate\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {Calendar} from \"react-calendar\";\r\nconst FilterColumn = (props) =>{\r\n    const [value, onChange] = useState(new Date());\r\n    const [searchParam, setSearchParams] = useSearchParams();\r\n        useEffect(() => {\r\n            const hashtag= searchParam.get('hashtag');\r\n           setSearchParams({\r\n               hashtag:hashtag,\r\n            date: FormatDateToAdd(value)\r\n        });\r\n    }, [value]);\r\n    return (\r\n            <div className=\"filter-column\">\r\n                <Calendar className=\"calendar\"\r\n                          onClickDay={(value) => onChange(value)}\r\n                          value={value}\r\n                          selectRange={false}\r\n                          minDetail=\"month\"\r\n                />\r\n                <div className=\"list-hashtag\"> \r\n                <label className=\"hashtag-label\" >Channels</label>\r\n                <Hashtag\r\n                    setHashtagChange={(value) => props.setHashtagChange(value)}\r\n                />           \r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default FilterColumn","import React, { useEffect } from \"react\";\r\nimport './MainBoard.scss';\r\nimport BoardContent from \"../BoardContent/BoardContent\";\r\nimport FilterColumn from \"../FilterColumn/FilterColumn\";\r\nimport { useState } from \"react\";\r\nconst MainBoard = () => {\r\n    const [hashtagChange, setHashtagChange] = useState(false);\r\n    return (\r\n        <div className='main-board'>\r\n            <FilterColumn\r\n                setHashtagChange={(value) => setHashtagChange(value)}\r\n            />\r\n            <BoardContent \r\n                hashtagChange={hashtagChange}\r\n                setHashtagChange={(value) => setHashtagChange(value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default MainBoard","import AppBar from \"./components/AppBar/AppBar\";\r\nimport BoardBar from \"./components/BoardBar/BoardBar\";\r\nimport MainBoard from \"./components/MainBoard/MainBoard\";\r\nfunction App() {\r\n    return (\r\n        <div className=\"sunsame-clone\">\r\n            <AppBar/>\r\n            <MainBoard/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './App.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\r\nimport { Route, Routes,HashRouter, Navigate } from 'react-router-dom';\r\nimport FormAddHashtag from \"./components/FormAddHashtag/FormAddHashtag\";\r\nimport FormTaskDetail from \"./components/FormTaskDetail/FormTaskDetail\";\r\nexport const  BASE_URL= \"http://localhost:4455\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <Routes>\r\n              <Route path=\"/\" element={<Navigate to=\"/dashboard\" />}></Route>\r\n              <Route path='/dashboard' element= {<App />}></Route>\r\n              <Route path='/add-hashtag' element= {<FormAddHashtag />}></Route>\r\n              <Route path=\"/task-detail/:idtask\" element= {<FormTaskDetail />}></Route>\r\n          </Routes>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}